vendor_name = ModelSim
source_file = 1, C:/Users/jesti/OneDrive/Documents/USYD/2023_S2C_MTRX3700/AAA_Major_Project/NEW_GIT/MTRX3700-Repo/Memory_ctrl/debounce.sv
source_file = 1, C:/Users/jesti/OneDrive/Documents/USYD/2023_S2C_MTRX3700/AAA_Major_Project/NEW_GIT/MTRX3700-Repo/Memory_ctrl/memory_ctrl.sv
source_file = 1, C:/Users/jesti/OneDrive/Documents/USYD/2023_S2C_MTRX3700/AAA_Major_Project/NEW_GIT/MTRX3700-Repo/Memory_ctrl/BRAM_IP.qip
source_file = 1, C:/Users/jesti/OneDrive/Documents/USYD/2023_S2C_MTRX3700/AAA_Major_Project/NEW_GIT/MTRX3700-Repo/Memory_ctrl/BRAM_IP.v
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/aglobal181.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altrom.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altram.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/cbx.lst
source_file = 1, C:/Users/jesti/OneDrive/Documents/USYD/2023_S2C_MTRX3700/AAA_Major_Project/NEW_GIT/MTRX3700-Repo/Memory_ctrl/db/altsyncram_adp1.tdf
design_name = memory_ctrl
instance = comp, \LEDR[0]~output , LEDR[0]~output, memory_ctrl, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, memory_ctrl, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, memory_ctrl, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, memory_ctrl, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, memory_ctrl, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, memory_ctrl, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, memory_ctrl, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, memory_ctrl, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, memory_ctrl, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, memory_ctrl, 1
instance = comp, \LEDR[10]~output , LEDR[10]~output, memory_ctrl, 1
instance = comp, \LEDR[11]~output , LEDR[11]~output, memory_ctrl, 1
instance = comp, \LEDR[12]~output , LEDR[12]~output, memory_ctrl, 1
instance = comp, \LEDR[13]~output , LEDR[13]~output, memory_ctrl, 1
instance = comp, \LEDR[14]~output , LEDR[14]~output, memory_ctrl, 1
instance = comp, \LEDR[15]~output , LEDR[15]~output, memory_ctrl, 1
instance = comp, \LEDR[16]~output , LEDR[16]~output, memory_ctrl, 1
instance = comp, \LEDR[17]~output , LEDR[17]~output, memory_ctrl, 1
instance = comp, \LEDG[0]~output , LEDG[0]~output, memory_ctrl, 1
instance = comp, \LEDG[1]~output , LEDG[1]~output, memory_ctrl, 1
instance = comp, \LEDG[2]~output , LEDG[2]~output, memory_ctrl, 1
instance = comp, \LEDG[3]~output , LEDG[3]~output, memory_ctrl, 1
instance = comp, \LEDG[4]~output , LEDG[4]~output, memory_ctrl, 1
instance = comp, \LEDG[5]~output , LEDG[5]~output, memory_ctrl, 1
instance = comp, \LEDG[6]~output , LEDG[6]~output, memory_ctrl, 1
instance = comp, \LEDG[7]~output , LEDG[7]~output, memory_ctrl, 1
instance = comp, \LEDG[8]~output , LEDG[8]~output, memory_ctrl, 1
instance = comp, \SW[0]~input , SW[0]~input, memory_ctrl, 1
instance = comp, \SW[1]~input , SW[1]~input, memory_ctrl, 1
instance = comp, \SW[2]~input , SW[2]~input, memory_ctrl, 1
instance = comp, \SW[3]~input , SW[3]~input, memory_ctrl, 1
instance = comp, \SW[4]~input , SW[4]~input, memory_ctrl, 1
instance = comp, \SW[5]~input , SW[5]~input, memory_ctrl, 1
instance = comp, \SW[6]~input , SW[6]~input, memory_ctrl, 1
instance = comp, \SW[7]~input , SW[7]~input, memory_ctrl, 1
instance = comp, \KEY[0]~input , KEY[0]~input, memory_ctrl, 1
instance = comp, \write_address[0]~12 , write_address[0]~12, memory_ctrl, 1
instance = comp, \write_address[0] , write_address[0], memory_ctrl, 1
instance = comp, \write_address[1]~4 , write_address[1]~4, memory_ctrl, 1
instance = comp, \write_address[1] , write_address[1], memory_ctrl, 1
instance = comp, \write_address[2]~6 , write_address[2]~6, memory_ctrl, 1
instance = comp, \write_address[2] , write_address[2], memory_ctrl, 1
instance = comp, \write_address[3]~8 , write_address[3]~8, memory_ctrl, 1
instance = comp, \write_address[3] , write_address[3], memory_ctrl, 1
instance = comp, \write_address[4]~10 , write_address[4]~10, memory_ctrl, 1
instance = comp, \write_address[4] , write_address[4], memory_ctrl, 1
instance = comp, \read_address[0]~feeder , read_address[0]~feeder, memory_ctrl, 1
instance = comp, \read_address[0] , read_address[0], memory_ctrl, 1
instance = comp, \read_address[1]~feeder , read_address[1]~feeder, memory_ctrl, 1
instance = comp, \read_address[1] , read_address[1], memory_ctrl, 1
instance = comp, \read_address[2]~feeder , read_address[2]~feeder, memory_ctrl, 1
instance = comp, \read_address[2] , read_address[2], memory_ctrl, 1
instance = comp, \read_address[3]~feeder , read_address[3]~feeder, memory_ctrl, 1
instance = comp, \read_address[3] , read_address[3], memory_ctrl, 1
instance = comp, \read_address[4]~feeder , read_address[4]~feeder, memory_ctrl, 1
instance = comp, \read_address[4] , read_address[4], memory_ctrl, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, memory_ctrl, 1
instance = comp, \CLOCK_50~inputclkctrl , CLOCK_50~inputclkctrl, memory_ctrl, 1
instance = comp, \U1|n~feeder , U1|n~feeder, memory_ctrl, 1
instance = comp, \U1|n , U1|n, memory_ctrl, 1
instance = comp, \U1|count[0]~12 , U1|count[0]~12, memory_ctrl, 1
instance = comp, \U1|always0~0 , U1|always0~0, memory_ctrl, 1
instance = comp, \U1|count[0] , U1|count[0], memory_ctrl, 1
instance = comp, \U1|count[1]~14 , U1|count[1]~14, memory_ctrl, 1
instance = comp, \U1|count[1] , U1|count[1], memory_ctrl, 1
instance = comp, \U1|count[2]~16 , U1|count[2]~16, memory_ctrl, 1
instance = comp, \U1|count[2] , U1|count[2], memory_ctrl, 1
instance = comp, \U1|count[3]~18 , U1|count[3]~18, memory_ctrl, 1
instance = comp, \U1|count[3] , U1|count[3], memory_ctrl, 1
instance = comp, \U1|count[4]~20 , U1|count[4]~20, memory_ctrl, 1
instance = comp, \U1|count[4] , U1|count[4], memory_ctrl, 1
instance = comp, \U1|count[5]~22 , U1|count[5]~22, memory_ctrl, 1
instance = comp, \U1|count[5] , U1|count[5], memory_ctrl, 1
instance = comp, \U1|count[6]~24 , U1|count[6]~24, memory_ctrl, 1
instance = comp, \U1|count[6] , U1|count[6], memory_ctrl, 1
instance = comp, \U1|count[7]~26 , U1|count[7]~26, memory_ctrl, 1
instance = comp, \U1|count[7] , U1|count[7], memory_ctrl, 1
instance = comp, \U1|count[8]~28 , U1|count[8]~28, memory_ctrl, 1
instance = comp, \U1|count[8] , U1|count[8], memory_ctrl, 1
instance = comp, \U1|count[9]~30 , U1|count[9]~30, memory_ctrl, 1
instance = comp, \U1|count[9] , U1|count[9], memory_ctrl, 1
instance = comp, \U1|count[10]~32 , U1|count[10]~32, memory_ctrl, 1
instance = comp, \U1|count[10] , U1|count[10], memory_ctrl, 1
instance = comp, \U1|count[11]~34 , U1|count[11]~34, memory_ctrl, 1
instance = comp, \U1|count[11] , U1|count[11], memory_ctrl, 1
instance = comp, \U1|button_pressed~0 , U1|button_pressed~0, memory_ctrl, 1
instance = comp, \U1|button_pressed~1 , U1|button_pressed~1, memory_ctrl, 1
instance = comp, \U1|button_pressed~2 , U1|button_pressed~2, memory_ctrl, 1
instance = comp, \U1|button_pressed~3 , U1|button_pressed~3, memory_ctrl, 1
instance = comp, \U1|button_pressed , U1|button_pressed, memory_ctrl, 1
instance = comp, \ram1|altsyncram_component|auto_generated|ram_block1a0 , ram1|altsyncram_component|auto_generated|ram_block1a0, memory_ctrl, 1
instance = comp, \KEY[1]~input , KEY[1]~input, memory_ctrl, 1
instance = comp, \KEY[2]~input , KEY[2]~input, memory_ctrl, 1
instance = comp, \KEY[3]~input , KEY[3]~input, memory_ctrl, 1
instance = comp, \SW[8]~input , SW[8]~input, memory_ctrl, 1
instance = comp, \SW[9]~input , SW[9]~input, memory_ctrl, 1
instance = comp, \SW[10]~input , SW[10]~input, memory_ctrl, 1
instance = comp, \SW[11]~input , SW[11]~input, memory_ctrl, 1
instance = comp, \SW[12]~input , SW[12]~input, memory_ctrl, 1
instance = comp, \SW[13]~input , SW[13]~input, memory_ctrl, 1
instance = comp, \SW[14]~input , SW[14]~input, memory_ctrl, 1
instance = comp, \SW[15]~input , SW[15]~input, memory_ctrl, 1
instance = comp, \SW[16]~input , SW[16]~input, memory_ctrl, 1
instance = comp, \SW[17]~input , SW[17]~input, memory_ctrl, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
