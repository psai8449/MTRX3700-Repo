|top_level
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => ~NO_FANOUT~
SW[11] => ~NO_FANOUT~
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => ~NO_FANOUT~
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN4
IRDA_RXD => IRDA_RXD.IN1
EX_IO[0] <> <UNC>
EX_IO[2] <> uart_tx:u3.tx
EX_IO[3] <> <UNC>
EX_IO[4] <> <UNC>
EX_IO[5] <> <UNC>
EX_IO[6] <> <UNC>
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> Motor_ctrl_redone:motor1.enable2
GPIO[3] <> Motor_ctrl_redone:motor1.enable1
GPIO[4] <> Motor_ctrl_redone:motor1.ina2
GPIO[5] <> Motor_ctrl_redone:motor1.ina1
GPIO[6] <> Motor_ctrl_redone:motor1.inb2
GPIO[7] <> Motor_ctrl_redone:motor1.inb1
GPIO[8] <> Motor_ctrl_redone:motor1.pwm2
GPIO[9] <> Motor_ctrl_redone:motor1.pwm1
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> proximity:u100.GPIO_34
GPIO[35] <> proximity:u100.GPIO_35
LEDG[0] <= send[0].DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= send[1].DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= send[2].DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= send[3].DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= send[4].DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= send[5].DB_MAX_OUTPUT_PORT_TYPE
LEDG[6] <= send[6].DB_MAX_OUTPUT_PORT_TYPE
LEDG[7] <= send[7].DB_MAX_OUTPUT_PORT_TYPE
LEDG[8] <= <GND>
LEDR[0] <= tx_byte[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= tx_byte[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= tx_byte[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= tx_byte[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= tx_byte[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= tx_byte[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= tx_byte[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= tx_byte[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= <GND>
LEDR[9] <= uart_rx:uart_rx_u.data_received[0]
LEDR[10] <= uart_rx:uart_rx_u.data_received[1]
LEDR[11] <= uart_rx:uart_rx_u.data_received[2]
LEDR[12] <= uart_rx:uart_rx_u.data_received[3]
LEDR[13] <= uart_rx:uart_rx_u.data_received[4]
LEDR[14] <= uart_rx:uart_rx_u.data_received[5]
LEDR[15] <= uart_rx:uart_rx_u.data_received[6]
LEDR[16] <= uart_rx:uart_rx_u.data_received[7]
LEDR[17] <= <GND>


|top_level|Motor_ctrl_redone:motor1
clk => clk.IN2
IR_input[0] => Decoder0.IN7
IR_input[1] => Decoder0.IN6
IR_input[2] => Decoder0.IN5
IR_input[3] => Decoder0.IN4
IR_input[4] => Decoder0.IN3
IR_input[5] => Decoder0.IN2
IR_input[6] => Decoder0.IN1
IR_input[7] => Decoder0.IN0
duty_cycle_1[0] => duty_cycle_1[0].IN1
duty_cycle_1[1] => duty_cycle_1[1].IN1
duty_cycle_1[2] => duty_cycle_1[2].IN1
duty_cycle_1[3] => duty_cycle_1[3].IN1
duty_cycle_1[4] => duty_cycle_1[4].IN1
duty_cycle_1[5] => duty_cycle_1[5].IN1
duty_cycle_1[6] => duty_cycle_1[6].IN1
duty_cycle_2[0] => duty_cycle_2[0].IN1
duty_cycle_2[1] => duty_cycle_2[1].IN1
duty_cycle_2[2] => duty_cycle_2[2].IN1
duty_cycle_2[3] => duty_cycle_2[3].IN1
duty_cycle_2[4] => duty_cycle_2[4].IN1
duty_cycle_2[5] => duty_cycle_2[5].IN1
duty_cycle_2[6] => duty_cycle_2[6].IN1
pwm1 <= pwm:PWM1.pwm_out
pwm2 <= pwm:PWM2.pwm_out
enable1 <= <VCC>
enable2 <= <VCC>
ina1 <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
inb1 <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
ina2 <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
inb2 <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE


|top_level|Motor_ctrl_redone:motor1|pwm:PWM1
clk_50 => pwm_out~reg0.CLK
clk_50 => counter[0].CLK
clk_50 => counter[1].CLK
clk_50 => counter[2].CLK
clk_50 => counter[3].CLK
clk_50 => counter[4].CLK
clk_50 => counter[5].CLK
clk_50 => counter[6].CLK
clk_50 => counter[7].CLK
clk_50 => counter[8].CLK
clk_50 => counter[9].CLK
clk_50 => counter[10].CLK
clk_50 => counter[11].CLK
clk_50 => counter[12].CLK
clk_50 => counter[13].CLK
clk_50 => counter[14].CLK
clk_50 => counter[15].CLK
clk_50 => counter[16].CLK
rst => always0.IN1
DUTY_CYCLE[0] => Mult0.IN16
DUTY_CYCLE[1] => Mult0.IN15
DUTY_CYCLE[2] => Mult0.IN14
DUTY_CYCLE[3] => Mult0.IN13
DUTY_CYCLE[4] => Mult0.IN12
DUTY_CYCLE[5] => Mult0.IN11
DUTY_CYCLE[6] => Mult0.IN10
pwm_out <= pwm_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|Motor_ctrl_redone:motor1|pwm:PWM2
clk_50 => pwm_out~reg0.CLK
clk_50 => counter[0].CLK
clk_50 => counter[1].CLK
clk_50 => counter[2].CLK
clk_50 => counter[3].CLK
clk_50 => counter[4].CLK
clk_50 => counter[5].CLK
clk_50 => counter[6].CLK
clk_50 => counter[7].CLK
clk_50 => counter[8].CLK
clk_50 => counter[9].CLK
clk_50 => counter[10].CLK
clk_50 => counter[11].CLK
clk_50 => counter[12].CLK
clk_50 => counter[13].CLK
clk_50 => counter[14].CLK
clk_50 => counter[15].CLK
clk_50 => counter[16].CLK
rst => always0.IN1
DUTY_CYCLE[0] => Mult0.IN16
DUTY_CYCLE[1] => Mult0.IN15
DUTY_CYCLE[2] => Mult0.IN14
DUTY_CYCLE[3] => Mult0.IN13
DUTY_CYCLE[4] => Mult0.IN12
DUTY_CYCLE[5] => Mult0.IN11
DUTY_CYCLE[6] => Mult0.IN10
pwm_out <= pwm_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|pll1:u0
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|top_level|pll1:u0|altpll:altpll_component
inclk[0] => pll1_altpll:auto_generated.inclk[0]
inclk[1] => pll1_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top_level|pll1:u0|altpll:altpll_component|pll1_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|top_level|IR_RECEIVE:u1
iCLK => oDATA[0]~reg0.CLK
iCLK => oDATA[1]~reg0.CLK
iCLK => oDATA[2]~reg0.CLK
iCLK => oDATA[3]~reg0.CLK
iCLK => oDATA[4]~reg0.CLK
iCLK => oDATA[5]~reg0.CLK
iCLK => oDATA[6]~reg0.CLK
iCLK => oDATA[7]~reg0.CLK
iCLK => oDATA[8]~reg0.CLK
iCLK => oDATA[9]~reg0.CLK
iCLK => oDATA[10]~reg0.CLK
iCLK => oDATA[11]~reg0.CLK
iCLK => oDATA[12]~reg0.CLK
iCLK => oDATA[13]~reg0.CLK
iCLK => oDATA[14]~reg0.CLK
iCLK => oDATA[15]~reg0.CLK
iCLK => oDATA[16]~reg0.CLK
iCLK => oDATA[17]~reg0.CLK
iCLK => oDATA[18]~reg0.CLK
iCLK => oDATA[19]~reg0.CLK
iCLK => oDATA[20]~reg0.CLK
iCLK => oDATA[21]~reg0.CLK
iCLK => oDATA[22]~reg0.CLK
iCLK => oDATA[23]~reg0.CLK
iCLK => oDATA[24]~reg0.CLK
iCLK => oDATA[25]~reg0.CLK
iCLK => oDATA[26]~reg0.CLK
iCLK => oDATA[27]~reg0.CLK
iCLK => oDATA[28]~reg0.CLK
iCLK => oDATA[29]~reg0.CLK
iCLK => oDATA[30]~reg0.CLK
iCLK => oDATA[31]~reg0.CLK
iCLK => data_buf[0].CLK
iCLK => data_buf[1].CLK
iCLK => data_buf[2].CLK
iCLK => data_buf[3].CLK
iCLK => data_buf[4].CLK
iCLK => data_buf[5].CLK
iCLK => data_buf[6].CLK
iCLK => data_buf[7].CLK
iCLK => data_buf[8].CLK
iCLK => data_buf[9].CLK
iCLK => data_buf[10].CLK
iCLK => data_buf[11].CLK
iCLK => data_buf[12].CLK
iCLK => data_buf[13].CLK
iCLK => data_buf[14].CLK
iCLK => data_buf[15].CLK
iCLK => data_buf[16].CLK
iCLK => data_buf[17].CLK
iCLK => data_buf[18].CLK
iCLK => data_buf[19].CLK
iCLK => data_buf[20].CLK
iCLK => data_buf[21].CLK
iCLK => data_buf[22].CLK
iCLK => data_buf[23].CLK
iCLK => data_buf[24].CLK
iCLK => data_buf[25].CLK
iCLK => data_buf[26].CLK
iCLK => data_buf[27].CLK
iCLK => data_buf[28].CLK
iCLK => data_buf[29].CLK
iCLK => data_buf[30].CLK
iCLK => data_buf[31].CLK
iCLK => data_ready.CLK
iCLK => data[0].CLK
iCLK => data[1].CLK
iCLK => data[2].CLK
iCLK => data[3].CLK
iCLK => data[4].CLK
iCLK => data[5].CLK
iCLK => data[6].CLK
iCLK => data[7].CLK
iCLK => data[8].CLK
iCLK => data[9].CLK
iCLK => data[10].CLK
iCLK => data[11].CLK
iCLK => data[12].CLK
iCLK => data[13].CLK
iCLK => data[14].CLK
iCLK => data[15].CLK
iCLK => data[16].CLK
iCLK => data[17].CLK
iCLK => data[18].CLK
iCLK => data[19].CLK
iCLK => data[20].CLK
iCLK => data[21].CLK
iCLK => data[22].CLK
iCLK => data[23].CLK
iCLK => data[24].CLK
iCLK => data[25].CLK
iCLK => data[26].CLK
iCLK => data[27].CLK
iCLK => data[28].CLK
iCLK => data[29].CLK
iCLK => data[30].CLK
iCLK => data[31].CLK
iCLK => bitcount[0].CLK
iCLK => bitcount[1].CLK
iCLK => bitcount[2].CLK
iCLK => bitcount[3].CLK
iCLK => bitcount[4].CLK
iCLK => bitcount[5].CLK
iCLK => data_count_flag.CLK
iCLK => data_count[0].CLK
iCLK => data_count[1].CLK
iCLK => data_count[2].CLK
iCLK => data_count[3].CLK
iCLK => data_count[4].CLK
iCLK => data_count[5].CLK
iCLK => data_count[6].CLK
iCLK => data_count[7].CLK
iCLK => data_count[8].CLK
iCLK => data_count[9].CLK
iCLK => data_count[10].CLK
iCLK => data_count[11].CLK
iCLK => data_count[12].CLK
iCLK => data_count[13].CLK
iCLK => data_count[14].CLK
iCLK => data_count[15].CLK
iCLK => data_count[16].CLK
iCLK => data_count[17].CLK
iCLK => state_count_flag.CLK
iCLK => state_count[0].CLK
iCLK => state_count[1].CLK
iCLK => state_count[2].CLK
iCLK => state_count[3].CLK
iCLK => state_count[4].CLK
iCLK => state_count[5].CLK
iCLK => state_count[6].CLK
iCLK => state_count[7].CLK
iCLK => state_count[8].CLK
iCLK => state_count[9].CLK
iCLK => state_count[10].CLK
iCLK => state_count[11].CLK
iCLK => state_count[12].CLK
iCLK => state_count[13].CLK
iCLK => state_count[14].CLK
iCLK => state_count[15].CLK
iCLK => state_count[16].CLK
iCLK => state_count[17].CLK
iCLK => idle_count_flag.CLK
iCLK => idle_count[0].CLK
iCLK => idle_count[1].CLK
iCLK => idle_count[2].CLK
iCLK => idle_count[3].CLK
iCLK => idle_count[4].CLK
iCLK => idle_count[5].CLK
iCLK => idle_count[6].CLK
iCLK => idle_count[7].CLK
iCLK => idle_count[8].CLK
iCLK => idle_count[9].CLK
iCLK => idle_count[10].CLK
iCLK => idle_count[11].CLK
iCLK => idle_count[12].CLK
iCLK => idle_count[13].CLK
iCLK => idle_count[14].CLK
iCLK => idle_count[15].CLK
iCLK => idle_count[16].CLK
iCLK => idle_count[17].CLK
iCLK => state~1.DATAIN
iRST_n => data_ready.ACLR
iRST_n => oDATA[0]~reg0.ACLR
iRST_n => oDATA[1]~reg0.ACLR
iRST_n => oDATA[2]~reg0.ACLR
iRST_n => oDATA[3]~reg0.ACLR
iRST_n => oDATA[4]~reg0.ACLR
iRST_n => oDATA[5]~reg0.ACLR
iRST_n => oDATA[6]~reg0.ACLR
iRST_n => oDATA[7]~reg0.ACLR
iRST_n => oDATA[8]~reg0.ACLR
iRST_n => oDATA[9]~reg0.ACLR
iRST_n => oDATA[10]~reg0.ACLR
iRST_n => oDATA[11]~reg0.ACLR
iRST_n => oDATA[12]~reg0.ACLR
iRST_n => oDATA[13]~reg0.ACLR
iRST_n => oDATA[14]~reg0.ACLR
iRST_n => oDATA[15]~reg0.ACLR
iRST_n => oDATA[16]~reg0.ACLR
iRST_n => oDATA[17]~reg0.ACLR
iRST_n => oDATA[18]~reg0.ACLR
iRST_n => oDATA[19]~reg0.ACLR
iRST_n => oDATA[20]~reg0.ACLR
iRST_n => oDATA[21]~reg0.ACLR
iRST_n => oDATA[22]~reg0.ACLR
iRST_n => oDATA[23]~reg0.ACLR
iRST_n => oDATA[24]~reg0.ACLR
iRST_n => oDATA[25]~reg0.ACLR
iRST_n => oDATA[26]~reg0.ACLR
iRST_n => oDATA[27]~reg0.ACLR
iRST_n => oDATA[28]~reg0.ACLR
iRST_n => oDATA[29]~reg0.ACLR
iRST_n => oDATA[30]~reg0.ACLR
iRST_n => oDATA[31]~reg0.ACLR
iRST_n => idle_count[0].ACLR
iRST_n => idle_count[1].ACLR
iRST_n => idle_count[2].ACLR
iRST_n => idle_count[3].ACLR
iRST_n => idle_count[4].ACLR
iRST_n => idle_count[5].ACLR
iRST_n => idle_count[6].ACLR
iRST_n => idle_count[7].ACLR
iRST_n => idle_count[8].ACLR
iRST_n => idle_count[9].ACLR
iRST_n => idle_count[10].ACLR
iRST_n => idle_count[11].ACLR
iRST_n => idle_count[12].ACLR
iRST_n => idle_count[13].ACLR
iRST_n => idle_count[14].ACLR
iRST_n => idle_count[15].ACLR
iRST_n => idle_count[16].ACLR
iRST_n => idle_count[17].ACLR
iRST_n => idle_count_flag.ACLR
iRST_n => state_count[0].ACLR
iRST_n => state_count[1].ACLR
iRST_n => state_count[2].ACLR
iRST_n => state_count[3].ACLR
iRST_n => state_count[4].ACLR
iRST_n => state_count[5].ACLR
iRST_n => state_count[6].ACLR
iRST_n => state_count[7].ACLR
iRST_n => state_count[8].ACLR
iRST_n => state_count[9].ACLR
iRST_n => state_count[10].ACLR
iRST_n => state_count[11].ACLR
iRST_n => state_count[12].ACLR
iRST_n => state_count[13].ACLR
iRST_n => state_count[14].ACLR
iRST_n => state_count[15].ACLR
iRST_n => state_count[16].ACLR
iRST_n => state_count[17].ACLR
iRST_n => state_count_flag.ACLR
iRST_n => data_count[0].ACLR
iRST_n => data_count[1].ACLR
iRST_n => data_count[2].ACLR
iRST_n => data_count[3].ACLR
iRST_n => data_count[4].ACLR
iRST_n => data_count[5].ACLR
iRST_n => data_count[6].ACLR
iRST_n => data_count[7].ACLR
iRST_n => data_count[8].ACLR
iRST_n => data_count[9].ACLR
iRST_n => data_count[10].ACLR
iRST_n => data_count[11].ACLR
iRST_n => data_count[12].ACLR
iRST_n => data_count[13].ACLR
iRST_n => data_count[14].ACLR
iRST_n => data_count[15].ACLR
iRST_n => data_count[16].ACLR
iRST_n => data_count[17].ACLR
iRST_n => data_count_flag.ACLR
iRST_n => bitcount[0].ACLR
iRST_n => bitcount[1].ACLR
iRST_n => bitcount[2].ACLR
iRST_n => bitcount[3].ACLR
iRST_n => bitcount[4].ACLR
iRST_n => bitcount[5].ACLR
iRST_n => data[0].ACLR
iRST_n => data[1].ACLR
iRST_n => data[2].ACLR
iRST_n => data[3].ACLR
iRST_n => data[4].ACLR
iRST_n => data[5].ACLR
iRST_n => data[6].ACLR
iRST_n => data[7].ACLR
iRST_n => data[8].ACLR
iRST_n => data[9].ACLR
iRST_n => data[10].ACLR
iRST_n => data[11].ACLR
iRST_n => data[12].ACLR
iRST_n => data[13].ACLR
iRST_n => data[14].ACLR
iRST_n => data[15].ACLR
iRST_n => data[16].ACLR
iRST_n => data[17].ACLR
iRST_n => data[18].ACLR
iRST_n => data[19].ACLR
iRST_n => data[20].ACLR
iRST_n => data[21].ACLR
iRST_n => data[22].ACLR
iRST_n => data[23].ACLR
iRST_n => data[24].ACLR
iRST_n => data[25].ACLR
iRST_n => data[26].ACLR
iRST_n => data[27].ACLR
iRST_n => data[28].ACLR
iRST_n => data[29].ACLR
iRST_n => data[30].ACLR
iRST_n => data[31].ACLR
iRST_n => state~3.DATAIN
iRST_n => data_buf[31].ENA
iRST_n => data_buf[30].ENA
iRST_n => data_buf[29].ENA
iRST_n => data_buf[28].ENA
iRST_n => data_buf[27].ENA
iRST_n => data_buf[26].ENA
iRST_n => data_buf[25].ENA
iRST_n => data_buf[24].ENA
iRST_n => data_buf[23].ENA
iRST_n => data_buf[22].ENA
iRST_n => data_buf[21].ENA
iRST_n => data_buf[20].ENA
iRST_n => data_buf[19].ENA
iRST_n => data_buf[18].ENA
iRST_n => data_buf[17].ENA
iRST_n => data_buf[16].ENA
iRST_n => data_buf[15].ENA
iRST_n => data_buf[14].ENA
iRST_n => data_buf[13].ENA
iRST_n => data_buf[12].ENA
iRST_n => data_buf[11].ENA
iRST_n => data_buf[10].ENA
iRST_n => data_buf[9].ENA
iRST_n => data_buf[8].ENA
iRST_n => data_buf[7].ENA
iRST_n => data_buf[6].ENA
iRST_n => data_buf[5].ENA
iRST_n => data_buf[4].ENA
iRST_n => data_buf[3].ENA
iRST_n => data_buf[2].ENA
iRST_n => data_buf[1].ENA
iRST_n => data_buf[0].ENA
iIRDA => always3.IN0
iIRDA => always5.IN0
iIRDA => always1.IN0
oDATA_READY <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
oDATA[0] <= oDATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[1] <= oDATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[2] <= oDATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[3] <= oDATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[4] <= oDATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[5] <= oDATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[6] <= oDATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[7] <= oDATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[8] <= oDATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[9] <= oDATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[10] <= oDATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[11] <= oDATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[12] <= oDATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[13] <= oDATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[14] <= oDATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[15] <= oDATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[16] <= oDATA[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[17] <= oDATA[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[18] <= oDATA[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[19] <= oDATA[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[20] <= oDATA[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[21] <= oDATA[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[22] <= oDATA[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[23] <= oDATA[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[24] <= oDATA[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[25] <= oDATA[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[26] <= oDATA[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[27] <= oDATA[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[28] <= oDATA[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[29] <= oDATA[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[30] <= oDATA[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[31] <= oDATA[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|uart_rx:uart_rx_u
clk => data_received[0]~reg0.CLK
clk => data_received[1]~reg0.CLK
clk => data_received[2]~reg0.CLK
clk => data_received[3]~reg0.CLK
clk => data_received[4]~reg0.CLK
clk => data_received[5]~reg0.CLK
clk => data_received[6]~reg0.CLK
clk => data_received[7]~reg0.CLK
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => rx_q0.CLK
clk => state~1.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => data_received[6]~reg0.ENA
rst => data_received[5]~reg0.ENA
rst => data_received[4]~reg0.ENA
rst => data_received[3]~reg0.ENA
rst => data_received[2]~reg0.ENA
rst => data_received[1]~reg0.ENA
rst => data_received[0]~reg0.ENA
rst => data_received[7]~reg0.ENA
rst => bit_index[0].ENA
rst => bit_index[1].ENA
rst => bit_index[2].ENA
rx => rx_q0.DATAIN
data_received[0] <= data_received[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[1] <= data_received[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[2] <= data_received[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[3] <= data_received[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[4] <= data_received[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[5] <= data_received[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[6] <= data_received[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_received[7] <= data_received[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid <= valid.DB_MAX_OUTPUT_PORT_TYPE
ready => next_state.IN1


|top_level|uart_tx:u3
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => data_to_send_temp[0].CLK
clk => data_to_send_temp[1].CLK
clk => data_to_send_temp[2].CLK
clk => data_to_send_temp[3].CLK
clk => data_to_send_temp[4].CLK
clk => data_to_send_temp[5].CLK
clk => data_to_send_temp[6].CLK
clk => data_to_send_temp[7].CLK
clk => state~1.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => data_to_send_temp.OUTPUTSELECT
rst => bit_index.OUTPUTSELECT
rst => bit_index.OUTPUTSELECT
rst => bit_index.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
tx <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[0] => data_to_send_temp.DATAB
data_to_send[1] => data_to_send_temp.DATAB
data_to_send[2] => data_to_send_temp.DATAB
data_to_send[3] => data_to_send_temp.DATAB
data_to_send[4] => data_to_send_temp.DATAB
data_to_send[5] => data_to_send_temp.DATAB
data_to_send[6] => data_to_send_temp.DATAB
data_to_send[7] => data_to_send_temp.DATAB
valid => next_state.IN0
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE


|top_level|proximity:u100
CLOCK_50 => CLOCK_50.IN1
GPIO_34 <> GPIO_34
LEDR[0] <= sensor_driver:u0.distance
LEDR[1] <= sensor_driver:u0.distance
LEDR[2] <= sensor_driver:u0.distance
LEDR[3] <= sensor_driver:u0.distance
LEDR[4] <= sensor_driver:u0.distance
LEDR[5] <= sensor_driver:u0.distance
LEDR[6] <= sensor_driver:u0.distance
LEDR[7] <= sensor_driver:u0.distance


|top_level|proximity:u100|sensor_driver:u0
clk => distanceRAW_in_cm[24].CLK
clk => distanceRAW_in_cm[25].CLK
clk => distanceRAW_in_cm[26].CLK
clk => distanceRAW_in_cm[27].CLK
clk => distanceRAW_in_cm[28].CLK
clk => distanceRAW_in_cm[29].CLK
clk => distanceRAW_in_cm[30].CLK
clk => distanceRAW_in_cm[31].CLK
clk => distanceRAW[0].CLK
clk => distanceRAW[1].CLK
clk => distanceRAW[2].CLK
clk => distanceRAW[3].CLK
clk => distanceRAW[4].CLK
clk => distanceRAW[5].CLK
clk => distanceRAW[6].CLK
clk => distanceRAW[7].CLK
clk => distanceRAW[8].CLK
clk => distanceRAW[9].CLK
clk => distanceRAW[10].CLK
clk => distanceRAW[11].CLK
clk => distanceRAW[12].CLK
clk => distanceRAW[13].CLK
clk => distanceRAW[14].CLK
clk => distanceRAW[15].CLK
clk => distanceRAW[16].CLK
clk => distanceRAW[17].CLK
clk => distanceRAW[18].CLK
clk => distanceRAW[19].CLK
clk => distanceRAW[20].CLK
clk => distanceRAW[21].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => state~1.DATAIN
rst => state~3.DATAIN
measure => state.IN1
echo => Selector3.IN1
echo => Selector2.IN1
echo => state.DATAB
trig <= inTRIGGER.DB_MAX_OUTPUT_PORT_TYPE
distance[0] <= distanceRAW_in_cm[24].DB_MAX_OUTPUT_PORT_TYPE
distance[1] <= distanceRAW_in_cm[25].DB_MAX_OUTPUT_PORT_TYPE
distance[2] <= distanceRAW_in_cm[26].DB_MAX_OUTPUT_PORT_TYPE
distance[3] <= distanceRAW_in_cm[27].DB_MAX_OUTPUT_PORT_TYPE
distance[4] <= distanceRAW_in_cm[28].DB_MAX_OUTPUT_PORT_TYPE
distance[5] <= distanceRAW_in_cm[29].DB_MAX_OUTPUT_PORT_TYPE
distance[6] <= distanceRAW_in_cm[30].DB_MAX_OUTPUT_PORT_TYPE
distance[7] <= distanceRAW_in_cm[31].DB_MAX_OUTPUT_PORT_TYPE


